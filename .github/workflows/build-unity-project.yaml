name: Unity builds
run-name: ${{ github.actor }} start a build ðŸš€

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        targetPlatform: ['StandaloneWindows64']

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache files
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build StandaloneWindows64
        uses: game-ci/unity-builder@v4
        id: buildStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: CGW
          versioning: Semantic

      - name: Archive
        run: tar -cvf build.tar -C build/${{ matrix.targetPlatform }} .

      - uses: actions/upload-artifact@v4
        name: Upload
        id: upload
        with:
          name: CGW-${{ matrix.targetPlatform }}-${{ steps.buildStep.outputs.buildVersion }}
          path: build.tar

      - name: Discord notification
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          description: 'New **${{ matrix.targetPlatform }}** build available'
          details: version:${{ steps.buildStep.outputs.buildVersion }} [Download](${{ steps.upload.outputs.artifact-url }})
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Discord notification
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          description: '**${{ matrix.targetPlatform }}** build failed'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}